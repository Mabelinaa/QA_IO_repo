"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[8786],{2715:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>d,contentTitle:()=>s,default:()=>p,frontMatter:()=>o,metadata:()=>t,toc:()=>c});var i=a(5893),r=a(1151);const o={sidebar_position:1},s="Planificaci\xf3n",t={id:"qa-automatizado/planificacion",title:"Planificaci\xf3n",description:"Output: Plan de Pruebas",source:"@site/docs/qa-automatizado/planificacion.md",sourceDirName:"qa-automatizado",slug:"/qa-automatizado/planificacion",permalink:"/QA_IO_repo/docs/qa-automatizado/planificacion",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"QA Automatizado",permalink:"/QA_IO_repo/docs/category/qa-automatizado"},next:{title:"Dise\xf1o (NUnit)",permalink:"/QA_IO_repo/docs/qa-automatizado/dise\xf1o"}},d={},c=[{value:"1.  Creaci\xf3n de un Plan de Pruebas en el men\xfa <em>Test Plans</em> de Azure Devops.",id:"1--creaci\xf3n-de-un-plan-de-pruebas-en-el-men\xfa-test-plans-de-azure-devops",level:3},{value:"2. Repositorio en Azure Devops",id:"2-repositorio-en-azure-devops",level:3},{value:"3. Creaci\xf3n del proyecto",id:"3-creaci\xf3n-del-proyecto",level:3},{value:"3.1. Proyecto NUnit",id:"31-proyecto-nunit",level:4},{value:"- A\xf1adir dependencias de Playwright al proyecto",id:"--a\xf1adir-dependencias-de-playwright-al-proyecto",level:5},{value:"- Instalaci\xf3n de navegadores de Playwright para ejecuci\xf3n de pruebas",id:"--instalaci\xf3n-de-navegadores-de-playwright-para-ejecuci\xf3n-de-pruebas",level:5},{value:"3.2. Proyecto <em>SpecFlow</em>",id:"32-proyecto-specflow",level:4}];function l(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h3:"h3",h4:"h4",h5:"h5",img:"img",p:"p",pre:"pre",strong:"strong",...(0,r.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"planificaci\xf3n",children:"Planificaci\xf3n"}),"\n",(0,i.jsx)(n.p,{children:"Output: Plan de Pruebas"}),"\n",(0,i.jsxs)(n.h3,{id:"1--creaci\xf3n-de-un-plan-de-pruebas-en-el-men\xfa-test-plans-de-azure-devops",children:["1.  Creaci\xf3n de un Plan de Pruebas en el men\xfa ",(0,i.jsx)(n.em,{children:"Test Plans"})," de Azure Devops."]}),"\n",(0,i.jsxs)(n.p,{children:["Este paso es necesario para vincular los casos de prueba desarrollados en ",(0,i.jsx)(n.em,{children:"Visual Studio"})," y los casos de prueba creados en ",(0,i.jsx)(n.em,{children:"Azure Test Plans"}),".\r\n",(0,i.jsx)(n.img,{src:a(2942).Z+"",width:"3748",height:"988"}),"\r\nEl nombre del Plan de Pruebas corresponde con el ",(0,i.jsx)(n.em,{children:"sprint"})," o entregable a cliente final.\r\n",(0,i.jsx)(n.img,{src:a(8087).Z+"",width:"2480",height:"1102"})]}),"\n",(0,i.jsx)(n.h3,{id:"2-repositorio-en-azure-devops",children:"2. Repositorio en Azure Devops"}),"\n",(0,i.jsx)(n.p,{children:"En caso de no existir un repositorio de pruebas en el proyecto, independiente del c\xf3digo fuente de la aplicaci\xf3n a probar, se crea un repositorio para registrar en \xe9l todos los planes de pruebas."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:a(2763).Z+"",width:"1275",height:"914"})}),"\n",(0,i.jsx)(n.p,{children:"Cada carpeta dentro del repositorio corresponde a un plan de pruebas diferente."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:a(958).Z+"",width:"1056",height:"708"})}),"\n",(0,i.jsx)(n.h3,{id:"3-creaci\xf3n-del-proyecto",children:"3. Creaci\xf3n del proyecto"}),"\n",(0,i.jsx)(n.h4,{id:"31-proyecto-nunit",children:"3.1. Proyecto NUnit"}),"\n",(0,i.jsxs)(n.p,{children:["Tras clonar el repositorio en el equipo local, se crea el proyecto en ",(0,i.jsx)(n.em,{children:"Visual Studio"})," usando como lenguaje .Net y como ",(0,i.jsx)(n.em,{children:"framework NUnit"}),". Existen otros frameworks v\xe1lidos para el desarrollo de pruebas, como ",(0,i.jsx)(n.em,{children:"XUnit"})," o ",(0,i.jsx)(n.em,{children:"MSTest"})," pero, siguiendo las recomendaciones de la documentaci\xf3n oficial, ",(0,i.jsx)(n.em,{children:"NUnit"})," es el ",(0,i.jsx)(n.em,{children:"framework"})," m\xe1s id\xf3neo para los proyectos de pruebas."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-dotnet",children:"dotnet new nunit -n PlaywrightTestPlanWithDotNet\r\ncd PlaywrightTestPlanWithDotNet\n"})}),"\n",(0,i.jsx)(n.h5,{id:"--a\xf1adir-dependencias-de-playwright-al-proyecto",children:"- A\xf1adir dependencias de Playwright al proyecto"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-dotnet",children:"dotnet add package Microsoft.Playwright.NUnit\r\ndotnet build\n"})}),"\n",(0,i.jsx)(n.h5,{id:"--instalaci\xf3n-de-navegadores-de-playwright-para-ejecuci\xf3n-de-pruebas",children:"- Instalaci\xf3n de navegadores de Playwright para ejecuci\xf3n de pruebas"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-dotnet",children:"pwsh bin/Debug/net7.0/playwright.ps1 install\n"})}),"\n",(0,i.jsx)(n.admonition,{type:"warning",children:(0,i.jsxs)(n.p,{children:["Requerido ",(0,i.jsx)(n.strong,{children:"PowerShell"})," para instalaci\xf3n de ",(0,i.jsx)(n.code,{children:"Playwright"}),". Link de ",(0,i.jsx)(n.a,{href:"https://docs.microsoft.com/powershell/scripting/install/installing-powershell",children:(0,i.jsx)(n.code,{children:"instalaci\xf3n"})}),"."]})}),"\n",(0,i.jsxs)(n.h4,{id:"32-proyecto-specflow",children:["3.2. Proyecto ",(0,i.jsx)(n.em,{children:"SpecFlow"})]})]})}function p(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},2763:(e,n,a)=>{a.d(n,{Z:()=>i});const i=a.p+"assets/images/RepoDemoTest-7d9567b589b399744c62a830fa0888c7.gif"},8087:(e,n,a)=>{a.d(n,{Z:()=>i});const i=a.p+"assets/images/af2737b4-cc92-4391-b23a-06f05dd82f52-849117ae294ae61974788e69e54acdfa.png"},2942:(e,n,a)=>{a.d(n,{Z:()=>i});const i=a.p+"assets/images/c82eda63-debd-48de-a4fa-0fb053bc37bd-7a6e9d067aa06b5aae21508b43c354cb.png"},958:(e,n,a)=>{a.d(n,{Z:()=>i});const i=a.p+"assets/images/repo_pp-0460f1f1c82414e216fe0c9d0880f967.png"},1151:(e,n,a)=>{a.d(n,{Z:()=>t,a:()=>s});var i=a(7294);const r={},o=i.createContext(r);function s(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);