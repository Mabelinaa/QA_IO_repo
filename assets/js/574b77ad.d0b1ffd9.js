"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[2767],{4296:(e,r,a)=>{a.r(r),a.d(r,{assets:()=>B,contentTitle:()=>A,default:()=>R,frontMatter:()=>V,metadata:()=>_,toc:()=>U});var n=a(5893),s=a(1151),t=a(7294),i=a(6905),l=a(2466),o=a(6550),c=a(469),d=a(1980),u=a(7392),p=a(12);function h(e){return t.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,t.isValidElement)(e)&&function(e){const{props:r}=e;return!!r&&"object"==typeof r&&"value"in r}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function g(e){const{values:r,children:a}=e;return(0,t.useMemo)((()=>{const e=r??function(e){return h(e).map((e=>{let{props:{value:r,label:a,attributes:n,default:s}}=e;return{value:r,label:a,attributes:n,default:s}}))}(a);return function(e){const r=(0,u.l)(e,((e,r)=>e.value===r.value));if(r.length>0)throw new Error(`Docusaurus error: Duplicate values "${r.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[r,a])}function m(e){let{value:r,tabValues:a}=e;return a.some((e=>e.value===r))}function x(e){let{queryString:r=!1,groupId:a}=e;const n=(0,o.k6)(),s=function(e){let{queryString:r=!1,groupId:a}=e;if("string"==typeof r)return r;if(!1===r)return null;if(!0===r&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:r,groupId:a});return[(0,d._X)(s),(0,t.useCallback)((e=>{if(!s)return;const r=new URLSearchParams(n.location.search);r.set(s,e),n.replace({...n.location,search:r.toString()})}),[s,n])]}function b(e){const{defaultValue:r,queryString:a=!1,groupId:n}=e,s=g(e),[i,l]=(0,t.useState)((()=>function(e){let{defaultValue:r,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(r){if(!m({value:r,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${r}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return r}const n=a.find((e=>e.default))??a[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:r,tabValues:s}))),[o,d]=x({queryString:a,groupId:n}),[u,h]=function(e){let{groupId:r}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(r),[n,s]=(0,p.Nk)(a);return[n,(0,t.useCallback)((e=>{a&&s.set(e)}),[a,s])]}({groupId:n}),b=(()=>{const e=o??u;return m({value:e,tabValues:s})?e:null})();(0,c.Z)((()=>{b&&l(b)}),[b]);return{selectedValue:i,selectValue:(0,t.useCallback)((e=>{if(!m({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);l(e),d(e),h(e)}),[d,h,s]),tabValues:s}}var f=a(2389);const j={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function v(e){let{className:r,block:a,selectedValue:s,selectValue:t,tabValues:o}=e;const c=[],{blockElementScrollPositionUntilNextRender:d}=(0,l.o5)(),u=e=>{const r=e.currentTarget,a=c.indexOf(r),n=o[a].value;n!==s&&(d(r),t(n))},p=e=>{let r=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{const a=c.indexOf(e.currentTarget)+1;r=c[a]??c[0];break}case"ArrowLeft":{const a=c.indexOf(e.currentTarget)-1;r=c[a]??c[c.length-1];break}}r?.focus()};return(0,n.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":a},r),children:o.map((e=>{let{value:r,label:a,attributes:t}=e;return(0,n.jsx)("li",{role:"tab",tabIndex:s===r?0:-1,"aria-selected":s===r,ref:e=>c.push(e),onKeyDown:p,onClick:u,...t,className:(0,i.Z)("tabs__item",j.tabItem,t?.className,{"tabs__item--active":s===r}),children:a??r},r)}))})}function y(e){let{lazy:r,children:a,selectedValue:s}=e;const i=(Array.isArray(a)?a:[a]).filter(Boolean);if(r){const e=i.find((e=>e.props.value===s));return e?(0,t.cloneElement)(e,{className:"margin-top--md"}):null}return(0,n.jsx)("div",{className:"margin-top--md",children:i.map(((e,r)=>(0,t.cloneElement)(e,{key:r,hidden:e.props.value!==s})))})}function w(e){const r=b(e);return(0,n.jsxs)("div",{className:(0,i.Z)("tabs-container",j.tabList),children:[(0,n.jsx)(v,{...e,...r}),(0,n.jsx)(y,{...e,...r})]})}function P(e){const r=(0,f.Z)();return(0,n.jsx)(w,{...e,children:h(e.children)},String(r))}const T={tabItem:"tabItem_Ymn6"};function N(e){let{children:r,hidden:a,className:s}=e;return(0,n.jsx)("div",{role:"tabpanel",className:(0,i.Z)(T.tabItem,s),hidden:a,children:r})}var C=a(5766);const E=a.p+"assets/images/reportNunit-8e47b7cfebd9ee37ffb6cf04d4ee7fd9.png",S=a.p+"assets/images/Nunitestructurev2-5a5224e3c53c975c0b5aecfa00b76cc1.png",k=a.p+"assets/images/runsettingscopyalways-213137fd218508b930f993a3ba103c55.gif",z=a.p+"assets/images/dir-5d7f1e84aab70a9debb9f7549d5556eb.png",D=a.p+"assets/images/POMfiles-6a6f4b6469beae671569df71660e2e60.png",q=a.p+"assets/images/logCLI-61afbb3ab1d9d788c9b3b9e06d9aa238.png",I=a.p+"assets/images/testEx-9fd2a854e9df388cddc94d3eaf19d800.png",O=a.p+"assets/images/codegen-aab831a8d028e2306e844b45251d7f0e.gif",V={sidebar_position:2},A="Dise\xf1o (NUnit)",_={id:"qa-automatizado/dise\xf1o",title:"Dise\xf1o (NUnit)",description:"Output: Test Suite, Test cases",source:"@site/docs/qa-automatizado/dise\xf1o.mdx",sourceDirName:"qa-automatizado",slug:"/qa-automatizado/dise\xf1o",permalink:"/QA_IO_repo/docs/qa-automatizado/dise\xf1o",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Planificaci\xf3n",permalink:"/QA_IO_repo/docs/qa-automatizado/planificacion"},next:{title:"Dise\xf1o (SpecFlow)",permalink:"/QA_IO_repo/docs/qa-automatizado/dise\xf1o_spec"}},B={},U=[{value:"Estructura b\xe1sica del proyecto",id:"estructura-b\xe1sica-del-proyecto",level:3},{value:"Configuraci\xf3n del proyecto",id:"configuraci\xf3n-del-proyecto",level:3},{value:"POM: Page object models",id:"pom-page-object-models",level:3},{value:"Ejecuci\xf3n de las pruebas",id:"ejecuci\xf3n-de-las-pruebas",level:3},{value:"Generador de pruebas",id:"generador-de-pruebas",level:3}];function L(e){const r={code:"code",em:"em",h1:"h1",h3:"h3",li:"li",mermaid:"mermaid",p:"p",pre:"pre",ul:"ul",...(0,s.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.h1,{id:"dise\xf1o-nunit",children:"Dise\xf1o (NUnit)"}),"\n",(0,n.jsxs)(r.p,{children:["Output: ",(0,n.jsx)(r.em,{children:"Test Suite"}),", ",(0,n.jsx)(r.em,{children:"Test cases"})]}),"\n","\n","\n",(0,n.jsx)(r.h3,{id:"estructura-b\xe1sica-del-proyecto",children:"Estructura b\xe1sica del proyecto"}),"\n",(0,n.jsx)(r.mermaid,{value:'        flowchart TB        \r\n        subgraph "Playwright Arquitectura"\r\n          style id1 fill:#3498db,stroke:#ffffff,stroke-width:2px,color:#ffffff\r\n          style id2 fill:#27ae60,stroke:#ffffff,stroke-width:2px,color:#ffffff\r\n          style id3 fill:#8B4513,stroke:#ffffff,stroke-width:2px,color:#ffffff\r\n          id1[[\ud83c\udfad Playwright for .NET ]] --\x3e id2(Browser)\r\n          id2 --\x3e id3(((PageTest)))\r\n        end'}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.code,{children:"Microsoft.Playwright.NUnit"})," proporciona la interfaz ",(0,n.jsx)(r.code,{children:"PageTest"})," para implementar en los archivos de prueba. Esta interfaz permite inicializar el navegador con una configuraci\xf3n b\xe1sica."]}),"\n",(0,n.jsxs)(r.p,{children:["Cada bloque de c\xf3digo decorado con el atributo ",(0,n.jsx)(r.code,{children:"[test]"})," aparece en el explorador de pruebas para ser ejecutado. El explorador de pruebas de ",(0,n.jsx)(r.em,{children:"Visual Studio"})," tambi\xe9n muestra informaci\xf3n sobre el resultado de las pruebas."]}),"\n",(0,n.jsx)(C.Z,{src:S}),"\n",(0,n.jsx)(r.h3,{id:"configuraci\xf3n-del-proyecto",children:"Configuraci\xf3n del proyecto"}),"\n",(0,n.jsxs)(r.p,{children:["La configuraci\xf3n por defecto de ",(0,n.jsx)(r.em,{children:"PageTest"})," no incluye funcionalidades como capturas de pantalla, grabaci\xf3n de v\xeddeo o generaci\xf3n de reportes.\r\nPara personalizar la configuraci\xf3n, o bien se sobreescriben los m\xe9todos ",(0,n.jsx)(r.code,{children:"Browser"})," y ",(0,n.jsx)(r.code,{children:"Page"}),", o bien se realiza la configuraci\xf3n global a trav\xe9s del archivo ",(0,n.jsx)(r.code,{children:"runsettings file"}),"."]}),"\n",(0,n.jsxs)(P,{groupId:"config",children:[(0,n.jsxs)(N,{value:"over",label:"Override (Sobrescritura)",children:[(0,n.jsxs)(r.p,{children:["En ",(0,n.jsx)(r.em,{children:"Playwright NUnit"})," se puede customizar el contexto de las pruebas a trav\xe9s de la sobreescritura de ",(0,n.jsx)(r.code,{children:"ContextOptions"})," (l\xednea 59) y a trav\xe9s de la instanciaci\xf3n de las clases ",(0,n.jsx)(r.code,{children:"Browser"})," y ",(0,n.jsx)(r.code,{children:"Page"})," (l\xedneas 8, 9)."]}),(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-dotnet",metastring:"showLineNumbers",children:'using Microsoft.Playwright.NUnit;\r\nusing Microsoft.Playwright;\r\n\r\nnamespace PlaywrightTestPlanWithDotNet\r\n{\r\n    public class Tests : PageTest\r\n    {\r\n        private IBrowser _browser;\r\n        private IPage _page;\r\n\r\n        [SetUp]\r\n        public async Task Setup()\r\n        {\r\n            // Inicializar el navegador en modo de visualizaci\xf3n\r\n            _browser = await Playwright.Chromium.LaunchAsync(new BrowserTypeLaunchOptions\r\n            {\r\n                Headless = false\r\n            });\r\n\r\n            // Configuraci\xf3n global para el contexto del navegador\r\n            var contextOptions = ContextOptions();\r\n            var context = await _browser.NewContextAsync(contextOptions);\r\n\r\n            // Crear una nueva p\xe1gina en el contexto del navegador\r\n            _page = await context.NewPageAsync();\r\n\r\n            // Extra: trazabilidad de las pruebas\r\n            await context.Tracing.StartAsync(new()\r\n            {\r\n                Screenshots = true,\r\n                Snapshots = true,\r\n                Sources = true\r\n            });\r\n        }\r\n\r\n        [Test]\r\n        public async Task Test1()\r\n        {\r\n            await _page.GotoAsync("");\r\n            await _page.GetByText("GET STARTED").ClickAsync();\r\n\r\n            //Assert\r\n            Assert.Pass();\r\n        }\r\n\r\n        [TearDown]\r\n        public async Task TearDown()\r\n        {\r\n            // Extra: Registro de archivo de trazabilidad\r\n            await _page.Context.Tracing.StopAsync(new()\r\n            {\r\n                Path = "trace.zip"\r\n            });\r\n            // Cierre del navegador\r\n            await _browser.CloseAsync();\r\n        }\r\n\r\n        // Extra: Sobrescritura de ContextOptions\r\n        public override BrowserNewContextOptions ContextOptions()\r\n        {\r\n            return new BrowserNewContextOptions()\r\n            {\r\n                // Extra: Grabaci\xf3n de video\r\n                RecordVideoDir = "video",\r\n                // Extra: Variable URL\r\n                BaseURL = "https://playwright.dev/",\r\n            };\r\n        }\r\n    }\r\n}\n'})}),(0,n.jsxs)(r.p,{children:["Los archivos generados (capturas, v\xeddeos, reportes) se registran en ",(0,n.jsx)(r.code,{children:"\\NUnitProject\\bin\\Debug\\netx\\"}),"."]}),(0,n.jsx)(r.p,{children:"La trazabilidad de las pruebas (lin 28) se inicia para generar un reporte HTML al que se accede a trav\xe9s del siguiente comando."}),(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-powershell",children:"pwsh bin/Debug/netX/playwright.ps1 show-trace https://example.com/trace.zip\n"})}),(0,n.jsxs)(r.p,{children:[(0,n.jsxs)(r.em,{children:["Visualizaci\xf3n del reporte ",(0,n.jsx)(r.code,{children:"html"})]}),":"]}),(0,n.jsx)(C.Z,{src:E,alt:"Reporte Playwright trace"})]}),(0,n.jsxs)(N,{value:"run",label:"Runsettings File",children:[(0,n.jsx)(r.p,{children:"Este archivo sin extensi\xf3n se crea en el directorio principal y permite realizar algunas personalizaciones como:"}),(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsxs)(r.li,{children:[(0,n.jsx)(r.code,{children:"<Playwright>"}),": Navegador de pruebas ",(0,n.jsx)(r.code,{children:"<BrowserName>"}),", Tiempos de espera ",(0,n.jsx)(r.code,{children:"<ExpectTimeout>"}),", Ejecuci\xf3n en modo ventana ",(0,n.jsx)(r.code,{children:"<Headless>false</Headless>"})," \xf3 velocidad de reproducci\xf3n ",(0,n.jsx)(r.code,{children:"<SlowMo>"}),"."]}),"\n",(0,n.jsxs)(r.li,{children:[(0,n.jsx)(r.code,{children:"<TestRunParameters>"}),": Pasar como par\xe1metros variables a trav\xe9s de la etiqueta ",(0,n.jsx)(r.code,{children:"<TestRunParameters><Parameter/></TestRunParameters>"}),"."]}),"\n"]}),(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-xml",children:'<?xml version="1.0" encoding="utf-8"?>\r\n  <RunSettings>\r\n    // highlight-start\r\n    <TestRunParameters>\r\n     <Parameter name="BaseUrl" value="https://playwright.dev/" />\r\n    </TestRunParameters>\r\n    // highlight-end\r\n    <NUnit>\r\n      <NumberOfTestWorkers>24</NumberOfTestWorkers>\r\n    </NUnit>\r\n    \x3c!-- General run configuration --\x3e\r\n    <RunConfiguration>\r\n      <EnvironmentVariables>\r\n        \x3c!-- For debugging selectors, it\'s recommend to set the following environment variable --\x3e\r\n        <DEBUG>pw:api</DEBUG>\r\n      </EnvironmentVariables>\r\n    </RunConfiguration>\r\n    \x3c!-- Playwright --\x3e  \r\n    <Playwright>\r\n      <BrowserName>chromium</BrowserName>\r\n      // highlight-next-line\r\n      <ExpectTimeout>5000</ExpectTimeout>\r\n      <LaunchOptions>\r\n        // highlight-next-line\r\n        <Headless>false</Headless>\r\n        <Channel>msedge</Channel>\r\n      </LaunchOptions>\r\n    </Playwright>\r\n  </RunSettings>\n'})}),(0,n.jsx)(r.p,{children:"Si se estalecen par\xe1metros globales estos pueden ser consumidos en los tests de la siguiente manera:"}),(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-dotnet",children:'  namespace PlaywrightTestPlanWithDotNet\r\n  {\r\n      public class UnitTestWithRunSettings : PageTest\r\n      {\r\n          [SetUp]\r\n          public async Task Setup()\r\n          {\r\n              // highlight-start\r\n              //Arrange (usando par\xe1metro "BaseUrl")\r\n              var baseUrl = TestContext.Parameters["BaseUrl"]\r\n                  ?? throw new Exception("WebAppUrl no est\xe1 configurada como par\xe1metro");\r\n              await Page.GotoAsync(baseUrl);\r\n              // highlight-end\r\n          }\r\n          [Test]\r\n          public async Task Test1()\r\n          {\r\n              //Act\r\n              await Page.GetByText("GET STARTED").ClickAsync();\r\n          }\r\n      }\r\n  }\n'})}),(0,n.jsxs)(r.p,{children:["Para que las configuraciones del archivo ",(0,n.jsx)(r.code,{children:"runsettings"})," funcionen correctamente hay que asgurarse de que se copie siempre en la carpeta ",(0,n.jsx)(r.em,{children:"/bin"})," del proyecto, restaurarlo y a\xf1adir el archivo a las propiedades del proyecto."]}),(0,n.jsx)(C.Z,{src:k})]})]}),"\n",(0,n.jsx)(r.h3,{id:"pom-page-object-models",children:"POM: Page object models"}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.em,{children:"POM"})," es un enfoque de organizaci\xf3n del proyecto que consiste en crear ",(0,n.jsx)(r.em,{children:"Page Object"})," para cada una de las p\xe1ginas o componentes de la interfaz de usuario, y encapsular en cada POM los elementos de la interfaz y las acciones que se pueden realizar en esa p\xe1gina. Los archivos ",(0,n.jsx)(r.em,{children:"POM"})," se almacenan en el directorio ",(0,n.jsx)(r.code,{children:"pages"})," y los archivos de pruebas en el directorio ",(0,n.jsx)(r.code,{children:"tests"}),"."]}),"\n",(0,n.jsxs)("div",{style:{display:"flex",alignItems:"center"},children:[(0,n.jsx)("img",{src:z,alt:"Directory",style:{maxWidth:"30%",height:"auto"}}),(0,n.jsx)("div",{style:{marginLeft:"20px"},children:(0,n.jsxs)("dl",{children:[(0,n.jsxs)("dt",{children:[(0,n.jsx)("code",{style:{backgroundColor:"yellow"},children:"pages"}),": Cada pantalla de la UI corresponde con un archivo en el que se crean los objetos y los m\xe9todos que ser\xe1n invocados desde los ",(0,n.jsx)("em",{children:"tests"}),"."]}),(0,n.jsxs)("dd",{children:[(0,n.jsx)("code",{style:{backgroundColor:"lightgreen"},children:"BasePageTest.cs"}),": Plantilla de configuraci\xf3n del contexto"]}),(0,n.jsx)("dd",{children:(0,n.jsxs)(r.p,{children:[(0,n.jsx)("code",{style:{backgroundColor:"lightgreen"},children:"HomePage.cs"}),': Corresponde a la "Home" de la web a probar']})}),(0,n.jsxs)("dt",{children:[(0,n.jsx)("code",{style:{backgroundColor:"yellow"},children:"tests"}),": archivos de prueba para cada set de pruebas d\xf3nde se consumir\xe1n los objetos y m\xe9todos de ",(0,n.jsx)("code",{children:"pages"}),"."]}),(0,n.jsxs)("dd",{children:[(0,n.jsx)("code",{style:{backgroundColor:"lightgreen"},children:"LoginTest.cs"}),": Conjunto de pruebas de la funcionalidad ",(0,n.jsx)(r.em,{children:"login"})]})]})})]}),"\n",(0,n.jsxs)(r.p,{children:["El archivo de pruebas ",(0,n.jsx)(r.code,{children:"LoginTest"})," se crea con la interfaz ",(0,n.jsx)(r.code,{children:"BasePageTest"})," para acceder a la configuraci\xf3n personalizada y se instancia la clase ",(0,n.jsx)(r.code,{children:"HomePage"})," para acceder a los objetos y m\xe9todos."]}),"\n",(0,n.jsx)(C.Z,{src:D,alt:"POM files"}),"\n",(0,n.jsx)(r.h3,{id:"ejecuci\xf3n-de-las-pruebas",children:"Ejecuci\xf3n de las pruebas"}),"\n",(0,n.jsxs)(r.p,{children:["Se pueden ejecutar las pruebas desde la terminal ",(0,n.jsx)(r.code,{children:"cli"})," o desde el explorador de pruebas de Visual Studio."]}),"\n",(0,n.jsxs)(P,{groupId:"tests",children:[(0,n.jsxs)(N,{value:"dotnet",label:"CLI",children:[(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsx)(r.li,{children:"Ejecutar todos los tests"}),"\n"]}),(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-dotnet",children:"  PS C:\\..\\PlaywrightTestPlanWithDotNet> dotnet test\n"})}),(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsx)(r.li,{children:"Ejecutar un test por nombre"}),"\n"]}),(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-dotnet",children:'  PS C:\\..\\PlaywrightTestPlanWithDotNet> dotnet test --filter "Name~LoginFaro"\n'})}),(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsx)(r.li,{children:"Ejecutar test en un navegador espec\xedfico"}),"\n"]}),(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-dotnet",children:"  PS C:\\..\\PlaywrightTestPlanWithDotNet> dotnet test -- Playwright.BrowserName=firefox\n"})}),(0,n.jsx)(r.p,{children:"Resultados de las pruebas"}),(0,n.jsx)(C.Z,{src:q})]}),(0,n.jsxs)(N,{value:"test",label:"Test Explorer",children:[(0,n.jsxs)(r.p,{children:["Desde el explorador de pruebas de Visual Studio se pueden ejecutar los tests de manera indivudual o conjuntamente.\r\nEn la pantalla derecha se muestran los resultados de los tests ejecutados: ",(0,n.jsx)(r.em,{children:"logs"}),", mensajes de error, duraci\xf3n del test..."]}),(0,n.jsx)(C.Z,{src:I})]})]}),"\n",(0,n.jsx)(r.h3,{id:"generador-de-pruebas",children:"Generador de pruebas"}),"\n",(0,n.jsxs)(r.p,{children:["Para generar ",(0,n.jsx)(r.em,{children:"tests"})," a trav\xe9s de la grabadora de ",(0,n.jsx)(r.code,{children:"Playwright"})," se ejecuta el siguiente comando en la consola:"]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-powershell",children:"  PS C:\\..\\PlaywrightTestPlanWithDotNet> pwsh bin/Debug/netX/playwright.ps1 codegen\n"})}),"\n",(0,n.jsxs)(r.p,{children:["Se puede iniciar la grabadora en una ",(0,n.jsx)(r.em,{children:"url"})," espec\xedfica indicando en el comando la direcci\xf3n web."]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-powershell",children:" PS C:\\..\\PlaywrightTestPlanWithDotNet> pwsh bin/Debug/netX/playwright.ps1 codegen https://www.google.es/\n"})}),"\n",(0,n.jsxs)(r.p,{children:["Con la grabadora se genera el c\xf3digo autom\xe1ticamente y se puede copiar a los ",(0,n.jsx)(r.em,{children:"tests"})," creados en el lenguaje seleccionado."]}),"\n",(0,n.jsx)(C.Z,{src:O})]})}function R(e={}){const{wrapper:r}={...(0,s.a)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(L,{...e})}):L(e)}},5766:(e,r,a)=>{a.d(r,{Z:()=>i});var n=a(7294),s=a(2557),t=a(5893);const i=e=>{let{src:r,alt:a,style:i}=e;return(0,n.useEffect)((()=>{(0,s.Z)(".zoomable-image")}),[]),(0,t.jsx)("div",{children:(0,t.jsx)("img",{className:"zoomable-image",src:r,alt:a,style:i})})}}}]);